[{"/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/reportWebVitals.js":"1","/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/index.js":"2","/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/App.js":"3"},{"size":362,"mtime":1608643680517,"results":"4","hashOfConfig":"5"},{"size":5513,"mtime":1609051066903,"results":"6","hashOfConfig":"5"},{"size":528,"mtime":1608644877747,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v2478j",{"filePath":"10","messages":"11","errorCount":1,"warningCount":13,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/reportWebVitals.js",[],"/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/index.js",["14","15","16","17","18","19","20","21","22","23","24","25","26","27"],"/Users/admin/Desktop/WorkProjectFork/react-demo/01helloworld/src/App.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":11},{"ruleId":"28","severity":1,"message":"32","line":20,"column":10,"nodeType":"30","messageId":"31","endLine":20,"endColumn":16},{"ruleId":"28","severity":1,"message":"33","line":35,"column":5,"nodeType":"30","messageId":"31","endLine":35,"endColumn":12},{"ruleId":"28","severity":1,"message":"34","line":43,"column":10,"nodeType":"30","messageId":"31","endLine":43,"endColumn":18},{"ruleId":"28","severity":1,"message":"35","line":51,"column":7,"nodeType":"30","messageId":"31","endLine":51,"endColumn":17},{"ruleId":"28","severity":1,"message":"36","line":62,"column":7,"nodeType":"30","messageId":"31","endLine":62,"endColumn":12},{"ruleId":"28","severity":1,"message":"37","line":89,"column":7,"nodeType":"30","messageId":"31","endLine":89,"endColumn":16},{"ruleId":"28","severity":1,"message":"38","line":115,"column":7,"nodeType":"30","messageId":"31","endLine":115,"endColumn":22},{"ruleId":"39","severity":1,"message":"40","line":136,"column":5,"nodeType":"41","messageId":"42","endLine":138,"endColumn":6},{"ruleId":"28","severity":1,"message":"43","line":152,"column":7,"nodeType":"30","messageId":"31","endLine":152,"endColumn":20},{"ruleId":"28","severity":1,"message":"44","line":166,"column":7,"nodeType":"30","messageId":"31","endLine":166,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":167,"column":5,"nodeType":"41","messageId":"42","endLine":169,"endColumn":6},{"ruleId":"45","severity":2,"message":"46","line":204,"column":1,"nodeType":"47","endLine":204,"endColumn":69,"fix":"48"},{"ruleId":"39","severity":1,"message":"40","line":225,"column":5,"nodeType":"41","messageId":"42","endLine":227,"endColumn":6},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Clock1' is defined but never used.","'element' is assigned a value but never used.","'ChildDom' is defined but never used.","'HelloWorld' is defined but never used.","'Clock' is defined but never used.","'TabSwitch' is defined but never used.","'ParentComponent' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ListComponent' is defined but never used.","'Lifecycle' is defined but never used.","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"49","text":"50"},[0,4219],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom'\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// react 函数式组件\nfunction Clock1(props) {\n    return (\n        <div>\n            <h1>现在的时间是{props.date.toLocaleTimeString()}</h1>\n            <h2>这是副标题</h2>\n        </div>\n    )\n}\nlet exampleStyle = {\n    background: 'blue',\n    borderBottom: '1px solid red',\n};\n\nlet arrClassName = ['bg', 'fontsize'];\n\nlet element = (\n    <div>\n        {/*这里写注释*/}\n        <h1 className={arrClassName.join(' ')} style={exampleStyle}>hello world</h1>\n    </div>\n);\n\n\nfunction ChildDom (props) {\n    return (\n        <div>\n            <h1>hello world</h1>\n        </div>\n    );\n}\n\nclass HelloWorld extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>hello world</h1>\n            </div>\n        );\n    }\n}\n\n\nclass Clock extends React.Component {\n    constructor (props) {\n        super(props);\n        // 构造函数初始化数据\n        this.state = {\n            time: new Date().toLocaleTimeString(),\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>当前时间：{this.state.time}</p>\n            </div>\n        );\n    }\n    // 生命周期函数，组件渲染完成的函数\n    componentDidMount() {\n        setInterval(() => {\n            // 修改数据，不要直接修改数据\n            this.setState({\n                time: new Date().toLocaleTimeString(),\n            });\n        }, 1000);\n    }\n}\n\n\nclass TabSwitch extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            index: 0,\n        }\n    }\n    onClick (index) {\n        this.setState({ index });\n    }\n    render () {\n        return (\n            <div>\n                <div>\n                    <button onClick={() => this.onClick(0)}>按钮1</button>\n                    <button onClick={() => this.onClick(1)}>按钮2</button>\n                </div>\n                {\n                    this.state.index === 0 ? <div>内容1</div> : <div>内容2</div>\n                }\n            </div>\n        );\n    }\n}\n\n\nclass ParentComponent extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            text: '',\n        }\n    }\n    onText (e) {\n        this.setState({ text: e });\n    }\n    render () {\n        return (\n            <div>\n                <p>从子组件接收到的参数：{this.state.text}</p>\n                <ChildComponent onText={ (e) => this.onText(e) } />\n            </div>\n        )\n    }\n}\n\nclass ChildComponent extends React.Component {\n    constructor (props) {\n        super (props);\n    }\n    onClick () {\n        this.props.onText('hello world');\n    }\n    render () {\n        return (\n            <div>\n                <button onClick={ () => this.onClick() }>给父组件传递参数</button>\n            </div>\n        )\n    }\n}\n\n\nclass ListComponent extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            arr: [ 'a', 'b', 'c', 'd' ]\n        }\n    }\n    render () {\n        return (\n            <ul>{this.state.arr.map((item, index) => <li key={index}>{item}</li>)}</ul>\n        );\n    }\n}\n\nclass Lifecycle extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n    // 组件将要挂载渲染\n    componentWillMount() {\n\n    }\n    // 组件渲染完毕\n    componentDidMount() {\n\n    }\n    // 组件将要接收 props 数据\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n    // 组件接收到新的 state 或者 props ，判断是否更新，返回布尔值\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n    }\n    // 组件将要更新\n    componentWillUpdate(nextProps, nextState, nextContext) {\n\n    }\n    // 组件已经更新\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n    // 组件将要卸载\n    componentWillUnmount(){\n\n    }\n    // 渲染\n    render () {\n        return null\n    }\n}"]